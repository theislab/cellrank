name: Test

on:
    schedule:
    -   cron: 00 00 * * 1  # every Monday at 00:00
    push:
        branches: [master, dev]
    pull_request:
        branches: [master, dev]
    workflow_dispatch:
        inputs:
            reason:
                description: Reason for the workflow dispatch. Only "release" is valid.
                required: true
                default: release

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
        -   name: Set up Python 3.9
            uses: actions/setup-python@v2
            with:
                python-version: 3.9

        -   uses: actions/cache@v2
            with:
                path: ~/.cache/pre-commit
                key: precommit-${{ env.pythonLocation }}-${{ hashFiles('**/.pre-commit-config.yaml') }}

        -   name: Install pip dependencies
            run: |
                python -m pip install --upgrade pip
                pip install tox

        -   name: Lint
            run: |
                tox -e lint

    test:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest]
                python: [3.7, 3.9]
                use_slepc: [false]
                include:
                -   os: ubuntu-latest
                    python: 3.8
                    use_slepc: true
                -   os: macos-latest
                    python: 3.8
                    use_slepc: false

        steps:
        -   uses: actions/checkout@v2
        -   name: Set up Python ${{ matrix.python }}
            uses: actions/setup-python@v2
            with:
                python-version: ${{ matrix.python }}

        -   name: Install dependencies
            env:
                USE_SLEPC: ${{ matrix.use_slepc }}
            run: |
                ./.scripts/ci/install_dependencies.sh

        -   name: Get pip cache dir
            id: pip-cache
            run: |
                echo "::set-output name=dir::$(pip cache dir)"

        -   name: Restore pip cache
            uses: actions/cache@v2
            with:
                path: ${{ steps.pip-cache.outputs.dir }}
                key: pip-${{ runner.os }}-${{ env.pythonLocation }}

        -   name: Install pip dependencies
            run: |
                python -m pip install --upgrade pip
                pip install tox tox-gh-actions codecov

        -   name: Restore tox cache
            uses: actions/cache@v2
            with:
                path: .tox
                key: tox-${{ runner.os }}-${{ env.pythonLocation }}-${{ hashFiles('**/requirements.txt', '**/setup.py', '**/tox.ini') }}

        -   name: Test
            timeout-minutes: 60
            env:
                PLATFORM: ${{ matrix.os }}
                USE_SLEPC: ${{ matrix.use_slepc }}
            run: |
                tox -vv

        -   name: Upload coverage
            env:
                CODECOV_NAME: ${{ matrix.os }}-${{ matrix.python }}-{{ matrix.use_slepc }}
            run: |
                codecov --no-color --required --flags unittest

    regenerate-notebooks:
        # TODO(michalk8): version also cellrank_notebooks?, currently, ref there is ignored
        if: ${{ (github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev')) || (github.event_name == 'workflow_dispatch' && github.event.inputs.reason == 'release') }}
        needs: [lint, test]
        runs-on: ubuntu-latest
        steps:
        -   name: Request notebooks regeneration
            uses: peter-evans/repository-dispatch@v1
            with:
                token: ${{ secrets.ACCESS_TOKEN }}
                repository: theislab/cellrank_notebooks
                event-type: rebuild
                client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'

    release:
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.reason == 'release' }}
        needs: [lint, test]
        runs-on: ubuntu-latest
        steps:
        -   name: Invoke deployment workflow
            uses: benc-uk/workflow-dispatch@v1
            with:
                workflow: Deployment
                token: ${{ secrets.RELEASE_DISPATCH_TOKEN }}
                inputs: '{ "reason": "release" }'
