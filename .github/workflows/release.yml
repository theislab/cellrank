name: Release

on:
    create:
        branches: [release/v*]

jobs:
    release:
        runs-on: ubuntu-latest
        steps:
        -   uses: actions/checkout@v2
            with:
                token: ${{ secrets.TOWNCRIER_TOKEN }}

        -   name: Set up Python 3.8
            uses: actions/setup-python@v2
            with:
                python-version: 3.8

        -   name: Get the tag
            id: vars
            run: |
                echo ::set-output name=tag::${GITHUB_REF#refs/*/}

        -   name: Install dependencies
            run: |
                python -m pip install --upgrade pip
                pip install towncrier rstcheck bump2version
                pip install -e'.'

        -   name: Generate release notes
            run: |
                towncrier build --yes
                rm -f docs/source/release/notes-dev.rst
                towncrier build --yes --version dev
                rstcheck -r docs/source/release

        -   name: Commit release notes
            uses: stefanzweifel/git-auto-commit-action@v4
            with:
                commit_message: ${{ format('[auto][ci skip] Generate {0} release notes', steps.vars.output.tag) }}
                file_pattern: docs/source/release/**
                commit_user_name: CI
                skip_dirty_check: false

        -   name: Bump the version
            # the part (patch) doesn't matter when supplying --new-version
            env:
                VERSION: ${{ steps.vars.output.tag }}
            run: |
                bump2version patch --no-commit --no-tag --new-version "${VERSION/v/}"

        -   name: Commit version bump
            uses: stefanzweifel/git-auto-commit-action@v4
            with:
                commit_message: $${ format('[auto][ci skip] Release {0}', steps.vars.output.tag) }}
                file_pattern: setup.py cellrank/__init__.py .bumpversion.cfg
                commit_user_name: CI
                skip_dirty_check: false
                tagging_message: ${{ steps.vars.output.tag }}

        -   name: Merge into master
            uses: everlytic/branch-merge@1.1.2
            with:
                target_branch: master
                commit_message_template: '[auto][ci skip] Merge {source_ref} -> {target_branch}'

        -   name: Merge into dev
            uses: everlytic/branch-merge@1.1.2
            with:
                target_branch: dev
                commit_message_template: '[auto][ci skip] Merge {source_ref} -> {target_branch}'
